
## Generer l'activativation ou non des clefs
set foreign_key_checks=0;
set foreign_key_checks=1;


## Migration de la base de données
flask dn init
flask db migrate -m "message"
flask db upgrade

## Migration selon la version "a2bc510e80ba"
flask db upgrade a2bc510e80ba

## la base de données
mysqldump -u babou -p desc_users > backup.sql

### Triggers

CREATE TRIGGER user_service_trigger
AFTER UPDATE ON user
FOR EACH ROW
BEGIN
    -- Vérifier si le service a été modifié
    IF NEW.service_id != OLD.service_id THEN
        -- Insérer la nouvelle date de transition dans la table d'historique
        INSERT INTO user_service_history (user_id, old_service_id, new_service_id, transition_date)
        VALUES (NEW.id, OLD.service_id, NEW.service_id, CURRENT_TIMESTAMP);
    END IF;
END;

CREATE TABLE user_service_history (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    old_service_id INT NOT NULL,
    new_service_id INT NOT NULL,
    transition_date DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user (id),
    FOREIGN KEY (old_service_id) REFERENCES service (id),
    FOREIGN KEY (new_service_id) REFERENCES service (id))